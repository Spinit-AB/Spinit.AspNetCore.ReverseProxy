trigger:
  batch: true
  branches:
    include:
    - '*' # build all branches
    - refs/tags/*

pr:
  autoCancel: true
  branches:
    include:
    - master

pool:  
  vmImage: ubuntu-latest

variables:
  BuildConfiguration: Release
  
steps:
- task: PowerShell@2
  displayName: Set version variables
  inputs:
    targetType: filePath
    failOnStderr: true
    filePath: $(Build.SourcesDirectory)/deploy/set-version-variables.ps1

- task: PowerShell@2
  displayName: Update build number
  inputs:
    targetType: filePath
    failOnStderr: true
    filePath: $(Build.SourcesDirectory)/deploy/update-build-number.ps1

- task: DotNetCoreCLI@2
  displayName: .NET Core Restore
  inputs:
    command: restore
    projects: '**/*.sln'
    verbosityRestore: Normal

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: SonarCloud
    organization: 'spinit-ab'
    projectKey: Spinit.AspNetCore.ReverseProxy
    projectName: Spinit.AspNetCore.ReverseProxy
    projectVersion: '$(Version)'
    extraProperties: |
      sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml

- task: DotNetCoreCLI@2
  displayName: .NET Core Build
  inputs:
    command: build
    arguments: --no-restore --configuration $(BuildConfiguration) /p:VersionPrefix=$(VersionPrefix) /p:VersionSuffix=$(VersionSuffix)
    projects: '**/*.sln'

- task: DotNetCoreCLI@2
  displayName: .NET Core Test
  inputs:
    command: test
    arguments: --no-build --configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
    projects: '**/*[Tt]ests/*.csproj'

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'
  enabled: false

- task: DotNetCoreCLI@2
  displayName: .NET Core Pack
  inputs:
    command: custom
    custom: pack
    arguments: --configuration $(BuildConfiguration) /p:VersionPrefix=$(VersionPrefix) /p:VersionSuffix=$(VersionSuffix) --output $(Build.ArtifactStagingDirectory)
    projects: ./src/Spinit.AspNetCore.ReverseProxy/Spinit.AspNetCore.ReverseProxy.csproj

- task: PublishBuildArtifacts@1
  displayName: Publish artifacts
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)